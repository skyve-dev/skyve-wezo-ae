/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterPropertyRouteImport } from './routes/register-property'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ExamplesRouteImport } from './routes/examples'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExamplesIndexRouteImport } from './routes/examples/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as PropertyPropertyIdRouteImport } from './routes/property/$propertyId'
import { Route as ExamplesTimePickerRouteImport } from './routes/examples/time-picker'
import { Route as ExamplesSlidingDrawerRouteImport } from './routes/examples/sliding-drawer'
import { Route as ExamplesSelectionPickerRouteImport } from './routes/examples/selection-picker'
import { Route as ExamplesNumberStepperRouteImport } from './routes/examples/number-stepper'
import { Route as ExamplesInputRouteImport } from './routes/examples/input'
import { Route as ExamplesDatePickerRouteImport } from './routes/examples/date-picker'
import { Route as ExamplesButtonRouteImport } from './routes/examples/button'
import { Route as ExamplesBoxRouteImport } from './routes/examples/box'
import { Route as EditPropertyPropertyIdRouteImport } from './routes/edit-property.$propertyId'
import { Route as DashboardPhotosRouteImport } from './routes/dashboard/photos'
import { Route as DashboardMyPropertiesRouteImport } from './routes/dashboard/my-properties'

const RegisterPropertyRoute = RegisterPropertyRouteImport.update({
  id: '/register-property',
  path: '/register-property',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesRoute = ExamplesRouteImport.update({
  id: '/examples',
  path: '/examples',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesIndexRoute = ExamplesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExamplesRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const PropertyPropertyIdRoute = PropertyPropertyIdRouteImport.update({
  id: '/property/$propertyId',
  path: '/property/$propertyId',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesTimePickerRoute = ExamplesTimePickerRouteImport.update({
  id: '/time-picker',
  path: '/time-picker',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesSlidingDrawerRoute = ExamplesSlidingDrawerRouteImport.update({
  id: '/sliding-drawer',
  path: '/sliding-drawer',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesSelectionPickerRoute = ExamplesSelectionPickerRouteImport.update({
  id: '/selection-picker',
  path: '/selection-picker',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesNumberStepperRoute = ExamplesNumberStepperRouteImport.update({
  id: '/number-stepper',
  path: '/number-stepper',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesInputRoute = ExamplesInputRouteImport.update({
  id: '/input',
  path: '/input',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesDatePickerRoute = ExamplesDatePickerRouteImport.update({
  id: '/date-picker',
  path: '/date-picker',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesButtonRoute = ExamplesButtonRouteImport.update({
  id: '/button',
  path: '/button',
  getParentRoute: () => ExamplesRoute,
} as any)
const ExamplesBoxRoute = ExamplesBoxRouteImport.update({
  id: '/box',
  path: '/box',
  getParentRoute: () => ExamplesRoute,
} as any)
const EditPropertyPropertyIdRoute = EditPropertyPropertyIdRouteImport.update({
  id: '/edit-property/$propertyId',
  path: '/edit-property/$propertyId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardPhotosRoute = DashboardPhotosRouteImport.update({
  id: '/photos',
  path: '/photos',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMyPropertiesRoute = DashboardMyPropertiesRouteImport.update({
  id: '/my-properties',
  path: '/my-properties',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/examples': typeof ExamplesRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/register-property': typeof RegisterPropertyRoute
  '/dashboard/my-properties': typeof DashboardMyPropertiesRoute
  '/dashboard/photos': typeof DashboardPhotosRoute
  '/edit-property/$propertyId': typeof EditPropertyPropertyIdRoute
  '/examples/box': typeof ExamplesBoxRoute
  '/examples/button': typeof ExamplesButtonRoute
  '/examples/date-picker': typeof ExamplesDatePickerRoute
  '/examples/input': typeof ExamplesInputRoute
  '/examples/number-stepper': typeof ExamplesNumberStepperRoute
  '/examples/selection-picker': typeof ExamplesSelectionPickerRoute
  '/examples/sliding-drawer': typeof ExamplesSlidingDrawerRoute
  '/examples/time-picker': typeof ExamplesTimePickerRoute
  '/property/$propertyId': typeof PropertyPropertyIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/examples/': typeof ExamplesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/register-property': typeof RegisterPropertyRoute
  '/dashboard/my-properties': typeof DashboardMyPropertiesRoute
  '/dashboard/photos': typeof DashboardPhotosRoute
  '/edit-property/$propertyId': typeof EditPropertyPropertyIdRoute
  '/examples/box': typeof ExamplesBoxRoute
  '/examples/button': typeof ExamplesButtonRoute
  '/examples/date-picker': typeof ExamplesDatePickerRoute
  '/examples/input': typeof ExamplesInputRoute
  '/examples/number-stepper': typeof ExamplesNumberStepperRoute
  '/examples/selection-picker': typeof ExamplesSelectionPickerRoute
  '/examples/sliding-drawer': typeof ExamplesSlidingDrawerRoute
  '/examples/time-picker': typeof ExamplesTimePickerRoute
  '/property/$propertyId': typeof PropertyPropertyIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/examples': typeof ExamplesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/examples': typeof ExamplesRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/register-property': typeof RegisterPropertyRoute
  '/dashboard/my-properties': typeof DashboardMyPropertiesRoute
  '/dashboard/photos': typeof DashboardPhotosRoute
  '/edit-property/$propertyId': typeof EditPropertyPropertyIdRoute
  '/examples/box': typeof ExamplesBoxRoute
  '/examples/button': typeof ExamplesButtonRoute
  '/examples/date-picker': typeof ExamplesDatePickerRoute
  '/examples/input': typeof ExamplesInputRoute
  '/examples/number-stepper': typeof ExamplesNumberStepperRoute
  '/examples/selection-picker': typeof ExamplesSelectionPickerRoute
  '/examples/sliding-drawer': typeof ExamplesSlidingDrawerRoute
  '/examples/time-picker': typeof ExamplesTimePickerRoute
  '/property/$propertyId': typeof PropertyPropertyIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/examples/': typeof ExamplesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/examples'
    | '/login'
    | '/register'
    | '/register-property'
    | '/dashboard/my-properties'
    | '/dashboard/photos'
    | '/edit-property/$propertyId'
    | '/examples/box'
    | '/examples/button'
    | '/examples/date-picker'
    | '/examples/input'
    | '/examples/number-stepper'
    | '/examples/selection-picker'
    | '/examples/sliding-drawer'
    | '/examples/time-picker'
    | '/property/$propertyId'
    | '/dashboard/'
    | '/examples/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/register-property'
    | '/dashboard/my-properties'
    | '/dashboard/photos'
    | '/edit-property/$propertyId'
    | '/examples/box'
    | '/examples/button'
    | '/examples/date-picker'
    | '/examples/input'
    | '/examples/number-stepper'
    | '/examples/selection-picker'
    | '/examples/sliding-drawer'
    | '/examples/time-picker'
    | '/property/$propertyId'
    | '/dashboard'
    | '/examples'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/examples'
    | '/login'
    | '/register'
    | '/register-property'
    | '/dashboard/my-properties'
    | '/dashboard/photos'
    | '/edit-property/$propertyId'
    | '/examples/box'
    | '/examples/button'
    | '/examples/date-picker'
    | '/examples/input'
    | '/examples/number-stepper'
    | '/examples/selection-picker'
    | '/examples/sliding-drawer'
    | '/examples/time-picker'
    | '/property/$propertyId'
    | '/dashboard/'
    | '/examples/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  ExamplesRoute: typeof ExamplesRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  RegisterPropertyRoute: typeof RegisterPropertyRoute
  EditPropertyPropertyIdRoute: typeof EditPropertyPropertyIdRoute
  PropertyPropertyIdRoute: typeof PropertyPropertyIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register-property': {
      id: '/register-property'
      path: '/register-property'
      fullPath: '/register-property'
      preLoaderRoute: typeof RegisterPropertyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/examples': {
      id: '/examples'
      path: '/examples'
      fullPath: '/examples'
      preLoaderRoute: typeof ExamplesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/examples/': {
      id: '/examples/'
      path: '/'
      fullPath: '/examples/'
      preLoaderRoute: typeof ExamplesIndexRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/property/$propertyId': {
      id: '/property/$propertyId'
      path: '/property/$propertyId'
      fullPath: '/property/$propertyId'
      preLoaderRoute: typeof PropertyPropertyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/examples/time-picker': {
      id: '/examples/time-picker'
      path: '/time-picker'
      fullPath: '/examples/time-picker'
      preLoaderRoute: typeof ExamplesTimePickerRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/sliding-drawer': {
      id: '/examples/sliding-drawer'
      path: '/sliding-drawer'
      fullPath: '/examples/sliding-drawer'
      preLoaderRoute: typeof ExamplesSlidingDrawerRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/selection-picker': {
      id: '/examples/selection-picker'
      path: '/selection-picker'
      fullPath: '/examples/selection-picker'
      preLoaderRoute: typeof ExamplesSelectionPickerRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/number-stepper': {
      id: '/examples/number-stepper'
      path: '/number-stepper'
      fullPath: '/examples/number-stepper'
      preLoaderRoute: typeof ExamplesNumberStepperRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/input': {
      id: '/examples/input'
      path: '/input'
      fullPath: '/examples/input'
      preLoaderRoute: typeof ExamplesInputRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/date-picker': {
      id: '/examples/date-picker'
      path: '/date-picker'
      fullPath: '/examples/date-picker'
      preLoaderRoute: typeof ExamplesDatePickerRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/button': {
      id: '/examples/button'
      path: '/button'
      fullPath: '/examples/button'
      preLoaderRoute: typeof ExamplesButtonRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/examples/box': {
      id: '/examples/box'
      path: '/box'
      fullPath: '/examples/box'
      preLoaderRoute: typeof ExamplesBoxRouteImport
      parentRoute: typeof ExamplesRoute
    }
    '/edit-property/$propertyId': {
      id: '/edit-property/$propertyId'
      path: '/edit-property/$propertyId'
      fullPath: '/edit-property/$propertyId'
      preLoaderRoute: typeof EditPropertyPropertyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/photos': {
      id: '/dashboard/photos'
      path: '/photos'
      fullPath: '/dashboard/photos'
      preLoaderRoute: typeof DashboardPhotosRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/my-properties': {
      id: '/dashboard/my-properties'
      path: '/my-properties'
      fullPath: '/dashboard/my-properties'
      preLoaderRoute: typeof DashboardMyPropertiesRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardMyPropertiesRoute: typeof DashboardMyPropertiesRoute
  DashboardPhotosRoute: typeof DashboardPhotosRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardMyPropertiesRoute: DashboardMyPropertiesRoute,
  DashboardPhotosRoute: DashboardPhotosRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface ExamplesRouteChildren {
  ExamplesBoxRoute: typeof ExamplesBoxRoute
  ExamplesButtonRoute: typeof ExamplesButtonRoute
  ExamplesDatePickerRoute: typeof ExamplesDatePickerRoute
  ExamplesInputRoute: typeof ExamplesInputRoute
  ExamplesNumberStepperRoute: typeof ExamplesNumberStepperRoute
  ExamplesSelectionPickerRoute: typeof ExamplesSelectionPickerRoute
  ExamplesSlidingDrawerRoute: typeof ExamplesSlidingDrawerRoute
  ExamplesTimePickerRoute: typeof ExamplesTimePickerRoute
  ExamplesIndexRoute: typeof ExamplesIndexRoute
}

const ExamplesRouteChildren: ExamplesRouteChildren = {
  ExamplesBoxRoute: ExamplesBoxRoute,
  ExamplesButtonRoute: ExamplesButtonRoute,
  ExamplesDatePickerRoute: ExamplesDatePickerRoute,
  ExamplesInputRoute: ExamplesInputRoute,
  ExamplesNumberStepperRoute: ExamplesNumberStepperRoute,
  ExamplesSelectionPickerRoute: ExamplesSelectionPickerRoute,
  ExamplesSlidingDrawerRoute: ExamplesSlidingDrawerRoute,
  ExamplesTimePickerRoute: ExamplesTimePickerRoute,
  ExamplesIndexRoute: ExamplesIndexRoute,
}

const ExamplesRouteWithChildren = ExamplesRoute._addFileChildren(
  ExamplesRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  ExamplesRoute: ExamplesRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  RegisterPropertyRoute: RegisterPropertyRoute,
  EditPropertyPropertyIdRoute: EditPropertyPropertyIdRoute,
  PropertyPropertyIdRoute: PropertyPropertyIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
